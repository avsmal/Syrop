Описание используемых правил кодирования:

1. Классы именуются с большой буквы, без префиксов, каждое новое слово с
большой буквы (далее CamelStyle). Имена классам давать осмыслено, т. е.
давать имя Widget, Class и другое не самое хорошее решение

2. Именование членов данных начинается с префикса my, далее используем
CamelCase. Опять же не надо давать членам-данным имена типа: i, j, k, но
и имена типа mySomeClassVariableThatNeededForSomething тоже не очень
хорошее решение, помните краткость - сестра таланта.

3. Статические поля класса... временно отменяются, за использование
статический полей класса наказываем.

4. Именование констант происходит большими буквами через нижнее
подчеркивание

5. Рассатновка пробелов:
	5.1 Бинарные операции отделяются пробелами с обоих сторон
	5.2 В управляющих конструкциях типа if (), между ключевым
	словом и курглыми скобками ставим пробел
	5.3 В сложных выражениях с большим числом скобок, пробелы
	между скобками ставятся на усмотрение программиста, главный
	критерий читабельность, т. е. сложные выражения с большим
	числом скобок отменяются.
	5.4 Допустимо использование пробелов для выравнивания
	участков кода.

6. Расстановка фигурных скобок, каждая фигурная скобка должна быть на
отдельной строке. В управляющих конструкциях (типа if), если тело иммеет
всего один statement фигурные скобки не ставим, исключения возможны в
следующем случае:

if (condition)
{
	one statement
}
else
{
	two statement
	three statement
	...
}

7. Расстновка пустых строк. Не перебарьщиваем с пустыми строками, но
логические части кода имеет смысл отделять пустыми строками.

8. Рассановка комментариев. Не ставим комментарии там где не надо, ставим
там где надо, все просто! Не исполльзуем inline комментарии (короче не
ставим комментарии справа от statement-а), код комментируем сверху,
построчные комментарии выглядят ужасно.

9. Используем doxygen для генерации документации.

10. Главное, чтобы код хорошо выглядел и читался хорошо, а работоспособность
потом прикрутим.
